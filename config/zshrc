source "${HOME}/.zgen/zgen.zsh"

if ! zgen saved; then
  echo "Creating a zgen save"

  zgen oh-my-zsh

  # Dev
  
  # Git
  zgen oh-my-zsh plugins/git
  zgen load bobthecow/git-flow-completion
  # System
  zgen oh-my-zsh plugins/cp
  zgen oh-my-zsh plugins/history
  zgen oh-my-zsh plugins/man
  zgen oh-my-zsh plugins/sudo
  zgen oh-my-zsh plugins/ssh-agent
  zgen oh-my-zsh plugins/ubuntu
  zgen oh-my-zsh plugins/wd
  # Python
  zgen oh-my-zsh plugins/python
  zgen oh-my-zsh plugins/pip
  # Node
  zgen oh-my-zsh plugins/nvm
  
  zgen oh-my-zsh themes/agnoster

  zgen load chrissicool/zsh-256color
  zgen load joel-porquet/zsh-dircolors-solarized

  if command -v terraform 2>/dev/null >&2; then
    # Terraform
    zgen oh-my-zsh plugins/terraform
  fi
  if command -v php 2>/dev/null >&2; then
    # PHP
    zgen oh-my-zsh plugins/composer
  fi
  if command -v step 2>/dev/null >&2; then
    #zgen load smallstep/cli autocomplete/zsh_autocomplete
  fi
  if command -v docker 2>/dev/null >&2; then
    # Docker
    zgen oh-my-zsh plugins/docker
    zgen oh-my-zsh plugins/docker-compose
  fi
  if command -v kubectl 2>/dev/null >&2; then
    zgen oh-my-zsh plugins/kubectl
  fi

  zgen load zsh-users/zsh-autosuggestions

  if command -v brew 2>/dev/null >&2; then
    zgen oh-my-zsh plugins/brew
  fi

  zgen save
fi

if command -v nvim 2>/dev/null >&2; then
    alias vim="nvim"
    export EDITOR="nvim"
else
    export EDITOR="vim"
fi

export PATH="/home/thor/bin:$PATH"

if [[ -e ~/.zsh_local ]]; then
    source ~/.zsh_local
else
    echo "# Local environment specific alterations" >> ~/.zsh_local
fi

# Git upstream branch syncer.
# Usage: gsync master (checks out master, pull upstream, push origin).
function gsync() {
 if [[ ! "$1" ]] ; then
     echo "You must supply a branch."
     return 0
 fi

 BRANCHES=$(git branch --list $1)
 if [ ! "$BRANCHES" ] ; then
    echo "Branch $1 does not exist."
    return 0
 fi

 git checkout "$1" && \
 git pull upstream "$1" && \
 git push origin "$1"
}

# Set prompt color according to system type
if [ "$(uname)" = "Linux" ]; then;
    if type systemd-detect-virt > /dev/null 2>&1; then;
        case "$(systemd-detect-virt)" in
            none*)      crit=phy;;
            kvm*)       crit=vm;;
            oracle*)    crit=no;;
        esac

        if [ "$crit" = "no" ]; then
            prompt_dir() {
                prompt_segment green $CURRENT_FG '%~'
            }
        elif [ "$crit" = "phy" ]; then
            prompt_dir() {
                prompt_segment red $CURRENT_FG '%~'
            }
        elif [ "$crit" = "vm" ]; then
            prompt_dir() {
                prompt_segment yellow $CURRENT_FG '%~'
            }
        else
            prompt_dir() {
                prompt_segment blue $CURRENT_FG '%~'
            }
        fi
    fi
fi
